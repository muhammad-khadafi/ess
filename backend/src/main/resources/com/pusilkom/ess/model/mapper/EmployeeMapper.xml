<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pusilkom.ess.model.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.pusilkom.ess.model.Employee">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="nik" jdbcType="VARCHAR" property="nik" />
    <result column="birth_place" jdbcType="VARCHAR" property="birthPlace" />
    <result column="birth_date" jdbcType="DATE" property="birthDate" />
    <result column="religion" jdbcType="VARCHAR" property="religion" />
    <result column="blood_type" jdbcType="CHAR" property="bloodType" />
    <result column="main_phone_number" jdbcType="VARCHAR" property="mainPhoneNumber" />
    <result column="secondary_phone_number" jdbcType="VARCHAR" property="secondaryPhoneNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="emergency_contact" jdbcType="VARCHAR" property="emergencyContact" />
    <result column="emergency_phone" jdbcType="VARCHAR" property="emergencyPhone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="postcode" jdbcType="VARCHAR" property="postcode" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="entry_date" jdbcType="DATE" property="entryDate" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="created_by" jdbcType="INTEGER" property="createdBy" />
    <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate" />
    <result column="updated_by" jdbcType="INTEGER" property="updatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, gender, nik, birth_place, birth_date, religion, blood_type, main_phone_number, 
    secondary_phone_number, email, emergency_contact, emergency_phone, address, postcode, 
    city, entry_date, created_date, created_by, updated_date, updated_by
  </sql>
  <select id="selectByExample" parameterType="com.pusilkom.ess.model.EmployeeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pusilkom.ess.model.EmployeeExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pusilkom.ess.model.Employee">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into employee (id, name, gender, 
      nik, birth_place, birth_date, 
      religion, blood_type, main_phone_number, 
      secondary_phone_number, email, emergency_contact, 
      emergency_phone, address, postcode, 
      city, entry_date, created_date, 
      created_by, updated_date, updated_by
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{nik,jdbcType=VARCHAR}, #{birthPlace,jdbcType=VARCHAR}, #{birthDate,jdbcType=DATE}, 
      #{religion,jdbcType=VARCHAR}, #{bloodType,jdbcType=CHAR}, #{mainPhoneNumber,jdbcType=VARCHAR}, 
      #{secondaryPhoneNumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{emergencyContact,jdbcType=VARCHAR}, 
      #{emergencyPhone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{postcode,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{entryDate,jdbcType=DATE}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=INTEGER}, #{updatedDate,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pusilkom.ess.model.Employee" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="nik != null">
        nik,
      </if>
      <if test="birthPlace != null">
        birth_place,
      </if>
      <if test="birthDate != null">
        birth_date,
      </if>
      <if test="religion != null">
        religion,
      </if>
      <if test="bloodType != null">
        blood_type,
      </if>
      <if test="mainPhoneNumber != null">
        main_phone_number,
      </if>
      <if test="secondaryPhoneNumber != null">
        secondary_phone_number,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="emergencyContact != null">
        emergency_contact,
      </if>
      <if test="emergencyPhone != null">
        emergency_phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="postcode != null">
        postcode,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="entryDate != null">
        entry_date,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedDate != null">
        updated_date,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
        is_active,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="nik != null">
        #{nik,jdbcType=VARCHAR},
      </if>
      <if test="birthPlace != null">
        #{birthPlace,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        #{birthDate,jdbcType=DATE},
      </if>
      <if test="religion != null">
        #{religion,jdbcType=VARCHAR},
      </if>
      <if test="bloodType != null">
        #{bloodType,jdbcType=CHAR},
      </if>
      <if test="mainPhoneNumber != null">
        #{mainPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="secondaryPhoneNumber != null">
        #{secondaryPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emergencyContact != null">
        #{emergencyContact,jdbcType=VARCHAR},
      </if>
      <if test="emergencyPhone != null">
        #{emergencyPhone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null">
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="entryDate != null">
        #{entryDate,jdbcType=DATE},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedDate != null">
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
        true,
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pusilkom.ess.model.EmployeeExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update employee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.nik != null">
        nik = #{record.nik,jdbcType=VARCHAR},
      </if>
      <if test="record.birthPlace != null">
        birth_place = #{record.birthPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.birthDate != null">
        birth_date = #{record.birthDate,jdbcType=DATE},
      </if>
      <if test="record.religion != null">
        religion = #{record.religion,jdbcType=VARCHAR},
      </if>
      <if test="record.bloodType != null">
        blood_type = #{record.bloodType,jdbcType=CHAR},
      </if>
      <if test="record.mainPhoneNumber != null">
        main_phone_number = #{record.mainPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.secondaryPhoneNumber != null">
        secondary_phone_number = #{record.secondaryPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.emergencyContact != null">
        emergency_contact = #{record.emergencyContact,jdbcType=VARCHAR},
      </if>
      <if test="record.emergencyPhone != null">
        emergency_phone = #{record.emergencyPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.postcode != null">
        postcode = #{record.postcode,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.entryDate != null">
        entry_date = #{record.entryDate,jdbcType=DATE},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=INTEGER},
      </if>
      <if test="record.updatedDate != null">
        updated_date = #{record.updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update employee
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      nik = #{record.nik,jdbcType=VARCHAR},
      birth_place = #{record.birthPlace,jdbcType=VARCHAR},
      birth_date = #{record.birthDate,jdbcType=DATE},
      religion = #{record.religion,jdbcType=VARCHAR},
      blood_type = #{record.bloodType,jdbcType=CHAR},
      main_phone_number = #{record.mainPhoneNumber,jdbcType=VARCHAR},
      secondary_phone_number = #{record.secondaryPhoneNumber,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      emergency_contact = #{record.emergencyContact,jdbcType=VARCHAR},
      emergency_phone = #{record.emergencyPhone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      postcode = #{record.postcode,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      entry_date = #{record.entryDate,jdbcType=DATE},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=INTEGER},
      updated_date = #{record.updatedDate,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pusilkom.ess.model.Employee">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update employee
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="nik != null">
        nik = #{nik,jdbcType=VARCHAR},
      </if>
      <if test="birthPlace != null">
        birth_place = #{birthPlace,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        birth_date = #{birthDate,jdbcType=DATE},
      </if>
      <if test="religion != null">
        religion = #{religion,jdbcType=VARCHAR},
      </if>
      <if test="bloodType != null">
        blood_type = #{bloodType,jdbcType=CHAR},
      </if>
      <if test="mainPhoneNumber != null">
        main_phone_number = #{mainPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="secondaryPhoneNumber != null">
        secondary_phone_number = #{secondaryPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emergencyContact != null">
        emergency_contact = #{emergencyContact,jdbcType=VARCHAR},
      </if>
      <if test="emergencyPhone != null">
        emergency_phone = #{emergencyPhone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null">
        postcode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="entryDate != null">
        entry_date = #{entryDate,jdbcType=DATE},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedDate != null">
        updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pusilkom.ess.model.Employee">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update employee
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      nik = #{nik,jdbcType=VARCHAR},
      birth_place = #{birthPlace,jdbcType=VARCHAR},
      birth_date = #{birthDate,jdbcType=DATE},
      religion = #{religion,jdbcType=VARCHAR},
      blood_type = #{bloodType,jdbcType=CHAR},
      main_phone_number = #{mainPhoneNumber,jdbcType=VARCHAR},
      secondary_phone_number = #{secondaryPhoneNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      emergency_contact = #{emergencyContact,jdbcType=VARCHAR},
      emergency_phone = #{emergencyPhone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      postcode = #{postcode,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      entry_date = #{entryDate,jdbcType=DATE},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>